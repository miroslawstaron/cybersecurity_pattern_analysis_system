"token"
"	"
"	 cout"
" "
"   "
"  !"
"  """
"  #"
"  &"
"  '"
"  ("
"  )"
"  *"
"  +"
"  ,"
"  -"
"  ."
"  /"
"  0"
"  0x30"
"  11pt"
"  1in"
"  <"
"  ="
"  >"
"  @"
"  A"
"  AccountNumber"
"  Amount"
"  Append"
"  Argtest"
"  B"
"  Before"
"  Buffer"
"  But"
"  C"
"  CHAR"
"  CRLF"
"  Calculate"
"  Call"
"  Check"
"  Class"
"  Compare"
"  Content"
"  Copy"
"  Credits"
"  D"
"  Date"
"  Default"
"  Determine"
"  Edit"
"  Error"
"  Example"
"  Expect"
"  F"
"  False"
"  Field"
"  File"
"  Find"
"  Foo"
"  Further"
"  Get"
"  HTTP"
"  HttpServletRequest"
"  HttpServletResponse"
"  If"
"  IllegalArgumentException"
"  Increment"
"  Initialize"
"  Integer"
"  Is"
"  IsPresent"
"  Ll"
"  Lo"
"  Loop"
"  Lu"
"  MakeChoice"
"  Move"
"  NULL"
"  NX_FALSE"
"  NX_MAX_STRING_LENGTH"
"  NX_NULL"
"  NX_PACKET"
"  NX_SUCCESS"
"  NX_THREADS_ONLY_CALLER_CHECKING"
"  NX_WEB_HTTP_INCOMPLETE_PUT_ERROR"
"  NX_WEB_HTTP_NOT_FOUND"
"  NX_WEB_HTTP_SERVER_ID"
"  NX_WEB_HTTP_SERVER_TIMEOUT_RECEIVE"
"  Not"
"  Now"
"  NumberFormatException"
"  Optional"
"  Otherwise"
"  Password"
"  Pattern"
"  Position"
"  REG_EXTENDED"
"  Read"
"  Receive"
"  RemoteFlowSource"
"  Request"
"  Reset"
"  Return"
"  Returns"
"  SQLInjectionValidator"
"  Set"
"  Setup"
"  Skip"
"  Specify"
"  SpringServletInputParameterSource"
"  Start"
"  String"
"  StringFormatException"
"  System"
"  T"
"  Trim"
"  True"
"  UCHAR"
"  UI"
"  UINT"
"  ULONG"
"  URL"
"  Update"
"  Use"
"  User"
"  Validation"
"  ValidationException"
"  Validator"
"  When"
"  Whether"
"  Yes"
"  YourValidationException"
"  _nx_web_http_server_chunked_size_get"
"  _nx_web_http_server_content_get"
"  _nx_web_http_server_content_get_extended"
"  _nx_web_http_server_content_length_get"
"  _nx_web_http_server_field_value_get"
"  _nx_web_http_server_packet_get"
"  _nx_web_http_server_param_get"
"  _nx_web_http_server_query_get"
"  _nx_web_http_server_receive"
"  _nx_web_http_server_request_byte_expect"
"  _nx_web_http_server_request_chunked_get"
"  _nx_web_http_server_request_read"
"  _nx_web_http_server_type_get"
"  _nxe_web_http_server_content_get"
"  _nxe_web_http_server_content_length_get"
"  _nxe_web_http_server_packet_get"
"  _nxe_web_http_server_param_get"
"  _nxe_web_http_server_query_get"
"  _nxe_web_http_server_type_get"
"  a"
"  about"
"  account"
"  accountNumber"
"  actual"
"  actual_size"
"  after"
"  all"
"  allow"
"  amount"
"  an"
"  and"
"  another"
"  any"
"  anything"
"  appropriate"
"  are"
"  arg0"
"  argc"
"  args"
"  argtest"
"  argv"
"  as"
"  asks"
"  at"
"  attacker"
"  bar"
"  be"
"  been"
"  between"
"  blah"
"  body"
"  bool"
"  boolean"
"  break"
"  buffer"
"  buffer_ptr"
"  byte"
"  byte_offset"
"  bytes"
"  c"
"  caller"
"  calling"
"  can"
"  cat"
"  catch"
"  ch"
"  change"
"  char"
"  character"
"  chunk"
"  chunk_extension"
"  chunked"
"  cin"
"  class"
"  classes"
"  client"
"  cmd"
"  compile"
"  compiled"
"  completion"
"  consists"
"  contain"
"  content"
"  content_length"
"  continue"
"  convert"
"  coursename"
"  cout"
"  credits"
"  current"
"  current_data_pptr"
"  current_packet_pptr"
"  current_param"
"  current_query"
"  data"
"  date"
"  destination"
"  destination_ptr"
"  destination_size"
"  different"
"  digits"
"  do"
"  doPost"
"  don"
"  e"
"  either"
"  else"
"  end"
"  endl"
"  enter"
"  entered"
"  error"
"  escape_shell_cmd"
"  example"
"  execl"
"  expressions"
"  extends"
"  extension"
"  failed"
"  field"
"  field_name"
"  field_value"
"  field_value_size"
"  fields"
"  final"
"  find"
"  finished"
"  first"
"  font"
"  for"
"  format"
"  forward"
"  found"
"  from"
"  function"
"  gcc"
"  get"
"  getSourceType"
"  getValue"
"  grade"
"  has"
"  hasLength"
"  have"
"  header"
"  here"
"  html"
"  http_type_string"
"  i"
"  ideographs"
"  if"
"  in"
"  increased"
"  index"
"  indicating"
"  info"
"  information"
"  input"
"  instance"
"  int"
"  integer"
"  into"
"  invalid"
"  is"
"  isNumeric"
"  isValid"
"  its"
"  l"
"  lang"
"  length"
"  letters"
"  line"
"  list"
"  loop"
"  main"
"  make"
"  matched"
"  max_param_size"
"  max_query_size"
"  message"
"  method"
"  must"
"  name"
"  name_length"
"  need"
"  new"
"  new_packet_ptr"
"  next"
"  no"
"  normally"
"  not"
"  null"
"  number"
"  numeric"
"  nx_packet_append_ptr"
"  nx_packet_length"
"  nx_packet_prepend_ptr"
"  nx_packet_release"
"  nx_web_http_server_actual_bytes_received"
"  nx_web_http_server_chunked_request_remaining_size"
"  nx_web_http_server_expect_receive_bytes"
"  nx_web_http_server_id"
"  nx_web_http_server_request_chunked"
"  nx_web_http_server_request_packet"
"  of"
"  only"
"  only_letters"
"  or"
"  other"
"  otherwise"
"  out"
"  overflow"
"  override"
"  packet"
"  packet_ptr"
"  page"
"  param"
"  param_number"
"  param_ptr"
"  param_size"
"  parameter"
"  password"
"  picked"
"  pointer"
"  pointers"
"  present"
"  printf"
"  processing"
"  properly"
"  public"
"  query"
"  query_number"
"  query_ptr"
"  query_size"
"  reach"
"  receive"
"  regcomp"
"  regex"
"  regexec"
"  register"
"  remaining"
"  remove"
"  request"
"  requested"
"  required"
"  requirements"
"  response"
"  result"
"  return"
"  run"
"  s"
"  school"
"  score"
"  search"
"  semicolon"
"  semmle"
"  server"
"  server_ptr"
"  service"
"  servlet"
"  set"
"  signals"
"  size"
"  skip"
"  so"
"  some"
"  spaces"
"  specified"
"  srmp"
"  start"
"  startDate"
"  static"
"  status"
"  store"
"  string"
"  string_size"
"  successful"
"  sure"
"  table"
"  temp_name_length"
"  terminal"
"  terminate"
"  test"
"  testScore"
"  text"
"  that"
"  the"
"  there"
"  this"
"  through"
"  throw"
"  tmp"
"  to"
"  token"
"  try"
"  tryTransfer"
"  type"
"  unicodedata"
"  untrusted_bar"
"  up"
"  user"
"  userName"
"  valid"
"  validateInput"
"  validated"
"  validation"
"  value"
"  var"
"  void"
"  wait_option"
"  want"
"  was"
"  we"
"  what"
"  when"
"  which"
"  while"
"  white"
"  x"
"  you"
"  zero"
"  zipCode"
"  zipPattern"
"  zipcode"
"  {"
"  |"
"  }"
"  “"
"  “aa”"
"  “ad”"
"  “blah”"
"!"
"! ="
"! DOCTYPE"
"! IsValid"
"! isValid"
"! this"
"! zipPattern"
""""
"""  "
""" """
""" %"
""" &"
""" )"
""" ,"
""" ;"
""" <"
""" >"
""" @"
""" Class"
""" Content"
""" Credits"
""" Enter"
""" For"
""" Improper"
""" Invalid"
""" Sanitized"
""" Spring"
""" Start"
""" Submit"
""" Valid"
""" Value"
""" Your"
""" \"
""" ]"
""" ^"
""" coursename"
""" credits"
""" dd"
""" en"
""" fakePassword"
""" javax"
""" post"
""" select"
""" startDate"
""" submit"
""" text"
""" zip"
""" |"
"#"
"#  "
"# include"
"$"
"$  "
"$ """
"$ \"
"%"
"% """
"% s"
"% select"
"&"
"&  "
"& &"
"& '"
"& ("
"& ;"
"& new_packet_ptr"
"& temp_name_length"
"& tmp"
"'"
"'  "
"' &"
"' )"
"' ,"
"' -"
"' ."
"' /"
"' 0"
"' :"
"' ;"
"' ?"
"' A"
"' Bzdrężyło"
"' C"
"' E"
"' F"
"' G"
"' H"
"' He7lo"
"' L"
"' Ll"
"' Lo"
"' Lu"
"' N"
"' O"
"' Segoe"
"' T"
"' \"
"' a"
"' c"
"' e"
"' f"
"' g"
"' h"
"' l"
"' n"
"' o"
"' t"
"("
"(  "
"( !"
"( """
"( '"
"( ("
"( )"
"( *"
"( -"
"( 0"
"( Amount"
"( CHAR"
"( Integer"
"( IsPost"
"( NX_NOT_FOUND"
"( NX_PACKET"
"( NX_PTR_ERROR"
"( NX_SUCCESS"
"( NX_WEB_HTTP_ERROR"
"( NX_WEB_HTTP_IMPROPERLY_TERMINATED_PARAM"
"( NX_WEB_HTTP_NOT_FOUND"
"( NX_WEB_HTTP_NO_QUERY_PARSED"
"( NX_WEB_HTTP_SERVER"
"( NX_WEB_HTTP_TIMEOUT"
"( SpringRequestMappingParameter"
"( String"
"( UINT"
"( Validation"
"( YourValidationException"
"( _nx_utility_string_length_check"
"( _nx_web_http_server_memicmp"
"( _nx_web_http_server_packet_get"
"( _nx_web_http_server_type_get_extended"
"( accountNumber"
"( actual_size"
"( amount"
"( bar"
"( buffer_ptr"
"( c"
"( ch"
"( char"
"( chunk_extension"
"( cmd"
"( content_length"
"( current_param"
"( current_query"
"( destination_ptr"
"( field_value"
"( http_type_string"
"( i"
"( ind"
"( index"
"( int"
"( message"
"( name"
"( packet_ptr"
"( param_ptr"
"( param_size"
"( password"
"( pattern"
"( query_ptr"
"( query_size"
"( res"
"( s"
"( server_ptr"
"( size"
"( status"
"( string"
"( string_size"
"( testScore"
"( tmp"
"( untrusted_bar"
"( userName"
"( value"
"( x"
"( y"
"( “"
"( “Edit”"
"( “File”"
"( “View”"
"( “aa"
"( “ad"
"( “argtest”"
")"
")  "
") ("
") )"
") ,"
") ."
") :"
") ;"
") <"
") ?"
") ["
") packet_ptr"
") {"
"*"
"*  "
"* ("
"* )"
"* *"
"* /"
"* ?"
"* actual_size"
"* buffer_ptr"
"* ch"
"* chunk_size"
"* cmd"
"* content_length"
"* current_data_pptr"
"* current_packet_pptr"
"* destination_ptr"
"* field_name"
"* field_value"
"* foo"
"* http_type_string"
"* length"
"* name"
"* new_packet_ptr"
"* packet_ptr"
"* param_ptr"
"* param_size"
"* query_ptr"
"* query_size"
"* server_ptr"
"* string_size"
"+"
"+  "
"+ )"
"+ +"
"+ 0"
"+ ;"
"+ ="
"+ ]"
","
",  "
", '"
", 0"
", cmd"
", l"
", y"
"-"
"-  "
"- '"
"- -"
"- 0"
"- ;"
"- >"
"- MMM"
"- \"
"- family"
"- length"
"- o"
"- size"
"- yyyy"
"."
".  "
". """
". ."
". <"
". Add"
". AsDateTime"
". AsInt"
". DateTime"
". FlowSources"
". Integer"
". IsValid"
". Range"
". Raw"
". RequireField"
". SC_BAD_REQUEST"
". StringLength"
". ToString"
". ValidationMessage"
". ValidationSummary"
". account"
". asParameter"
". c"
". category"
". code"
". compile"
". contains"
". dataflow"
". equalsIgnoreCase"
". getAnAnnotation"
". getMessage"
". getParameter"
". getType"
". h"
". hasQualifiedName"
". isTaintedInput"
". java"
". matcher"
". matches"
". out"
". parseInt"
". print"
". replaceAll"
". sendError"
". validateInput"
". validation"
". value"
"/"
"/  "
"/ '"
"/ *"
"/ /"
"/ >"
"/ body"
"/ div"
"/ form"
"/ h1"
"/ head"
"/ home"
"/ html"
"/ label"
"/ p"
"/ rritchey"
"/ style"
"/ title"
"0"
"0  "
"0 """
"0 '"
"0 )"
"0 ,"
"0 ."
"0 ;"
"0 ]"
"0 }"
"0x30"
"0x30 )"
"11pt"
"11pt ;"
"1in"
"1in ;"
":"
":  "
": '"
";"
";  "
"; '"
"; `"
"; cmd"
"; x"
"; y"
"<"
"<  "
"< !"
"< /"
"< <"
"< ="
"< >"
"< T"
"< body"
"< br"
"< div"
"< form"
"< h1"
"< head"
"< html"
"< input"
"< label"
"< p"
"< stdio"
"< style"
"< title"
"="
"=  "
"= """
"= 0"
"= ="
"= ideographs"
"= l"
"= lowercase"
"= strlen"
"= uppercase"
">"
">  "
"> ="
"> >"
"> @"
"> Course"
"> Credits"
"> For"
"> Start"
"> This"
"> Validation"
"> ^"
"> x"
"?"
"?  "
"? $"
"? '"
"? ~"
"@"
"@ """
"@ Html"
"@ Request"
"@ if"
"A"
"A """
"A '"
"AccountNumber"
"AccountNumber  "
"AccountNumber ("
"Add"
"Add ("
"Amount"
"Amount  "
"Amount ("
"Append"
"Append  "
"Argtest"
"Argtest  "
"AsDateTime"
"AsDateTime ("
"AsInt"
"AsInt ("
"B"
"B """
"Before"
"Before  "
"Buffer"
"Buffer  "
"But"
"But  "
"Bzdrężyło"
"Bzdrężyło '"
"C"
"C """
"C '"
"CHAR"
"CHAR  "
"CHAR )"
"CRLF"
"CRLF  "
"CRLF ."
"Calculate"
"Calculate  "
"Call"
"Call  "
"Check"
"Check  "
"Class"
"Class  "
"Class ,"
"Compare"
"Compare  "
"Content"
"Content -"
"Copy"
"Copy  "
"Course"
"Course  "
"Credits"
"Credits  "
"Credits ,"
"Credits :"
"D"
"D """
"DOCTYPE"
"DOCTYPE  "
"Date"
"Date ,"
"DateTime"
"DateTime ("
"Default"
"Default  "
"Determine"
"Determine  "
"DoSomethingWith"
"DoSomethingWith ("
"E"
"E '"
"Edit"
"Edit ,"
"Enter"
"Enter  "
"Error"
"Error ,"
"Example"
"Example <"
"Expect"
"Expect  "
"F"
"F """
"F '"
"False"
"False  "
"Field"
"Field  "
"File"
"File ,"
"Find"
"Find  "
"FlowSources"
"Foo"
"Foo ("
"For"
"For  "
"Further"
"Further  "
"G"
"G '"
"Get"
"Get  "
"Get ("
"H"
"H '"
"HTTP"
"HTTP  "
"He7lo"
"He7lo '"
"Html"
"Html ."
"HttpServletRequest"
"HttpServletRequest  "
"HttpServletResponse"
"HttpServletResponse  "
"If"
"If  "
"IllegalArgumentException"
"IllegalArgumentException ("
"Improper"
"Improper  "
"Increment"
"Increment  "
"Initialize"
"Initialize ."
"Integer"
"Integer  "
"Integer ("
"Integer ."
"Invalid"
"Invalid  "
"Is"
"Is  "
"IsPost"
"IsPost )"
"IsPresent"
"IsPresent ("
"IsValid"
"IsValid ("
"L"
"L '"
"Ll"
"Ll '"
"Ll ="
"Lo"
"Lo '"
"Lo ="
"Loop"
"Loop  "
"Lu"
"Lu '"
"Lu ="
"MMM"
"MMM -"
"MakeChoice"
"MakeChoice ("
"Move"
"Move  "
"N"
"N '"
"NULL"
"NULL  "
"NULL )"
"NULL ,"
"NULL ."
"NX_FALSE"
"NX_FALSE ;"
"NX_MAX_STRING_LENGTH"
"NX_MAX_STRING_LENGTH  "
"NX_MAX_STRING_LENGTH )"
"NX_NOT_FOUND"
"NX_NOT_FOUND )"
"NX_NULL"
"NX_NULL )"
"NX_NULL ;"
"NX_PACKET"
"NX_PACKET  "
"NX_PTR_ERROR"
"NX_PTR_ERROR )"
"NX_SUCCESS"
"NX_SUCCESS )"
"NX_SUCCESS ;"
"NX_THREADS_ONLY_CALLER_CHECKING"
"NX_WEB_HTTP_ERROR"
"NX_WEB_HTTP_ERROR )"
"NX_WEB_HTTP_IMPROPERLY_TERMINATED_PARAM"
"NX_WEB_HTTP_IMPROPERLY_TERMINATED_PARAM )"
"NX_WEB_HTTP_INCOMPLETE_PUT_ERROR"
"NX_WEB_HTTP_INCOMPLETE_PUT_ERROR ;"
"NX_WEB_HTTP_NOT_FOUND"
"NX_WEB_HTTP_NOT_FOUND )"
"NX_WEB_HTTP_NOT_FOUND ;"
"NX_WEB_HTTP_NO_QUERY_PARSED"
"NX_WEB_HTTP_NO_QUERY_PARSED )"
"NX_WEB_HTTP_SERVER"
"NX_WEB_HTTP_SERVER  "
"NX_WEB_HTTP_SERVER_ID"
"NX_WEB_HTTP_SERVER_ID )"
"NX_WEB_HTTP_SERVER_TIMEOUT_RECEIVE"
"NX_WEB_HTTP_SERVER_TIMEOUT_RECEIVE )"
"NX_WEB_HTTP_TIMEOUT"
"NX_WEB_HTTP_TIMEOUT )"
"Not"
"Not  "
"Now"
"Now  "
"NumberFormatException"
"NumberFormatException  "
"O"
"O '"
"Optional"
"Optional <"
"Otherwise"
"Otherwise ,"
"Password"
"Password :"
"Pattern"
"Pattern  "
"Pattern ."
"Position"
"Position  "
"REG_EXTENDED"
"REG_EXTENDED |"
"REG_NOSUB"
"REG_NOSUB )"
"Range"
"Range ("
"Raw"
"Raw ("
"Read"
"Read  "
"Receive"
"Receive  "
"RemoteFlowSource"
"RemoteFlowSource  "
"Request"
"Request ["
"RequireField"
"RequireField ("
"Reset"
"Reset  "
"Return"
"Return  "
"Returns"
"Returns  "
"SC_BAD_REQUEST"
"SC_BAD_REQUEST ,"
"SQLInjectionValidator"
"SQLInjectionValidator  "
"SQLInjectionValidator ."
"Sanitized"
"Sanitized  "
"Segoe"
"Segoe  "
"Set"
"Set  "
"Setup"
"Setup  "
"Skip"
"Skip  "
"Specify"
"Specify  "
"Spring"
"Spring  "
"SpringRequestMappingParameter"
"SpringRequestMappingParameter  "
"SpringServletInputParameterSource"
"SpringServletInputParameterSource  "
"SpringServletInputParameterSource ("
"Start"
"Start  "
"String"
"String  "
"String ["
"StringFormatException"
"StringFormatException  "
"StringLength"
"StringLength ("
"Submit"
"Submit """
"System"
"System ."
"T"
"T  "
"T '"
"T >"
"This"
"This  "
"ToString"
"ToString ("
"Trim"
"Trim  "
"True"
"True  "
"UCHAR"
"UCHAR  "
"UI"
"UI '"
"UINT"
"UINT  "
"UINT )"
"ULONG"
"ULONG  "
"URL"
"URL ."
"Update"
"Update  "
"Use"
"Use  "
"User"
"User :"
"Valid"
"Valid """
"Validation"
"Validation  "
"Validation ."
"ValidationException"
"ValidationException ("
"ValidationMessage"
"ValidationMessage ("
"ValidationSummary"
"ValidationSummary ("
"Validator"
"Validator ."
"Value"
"Value  "
"View"
"View """
"When"
"When  "
"Whether"
"Whether  "
"Yes"
"Yes ,"
"Your"
"Your  "
"YourValidationException"
"YourValidationException  "
"YourValidationException ("
"["
"[ """
"[ 0"
"[ ]"
"[ abc"
"[ i"
"[ index"
"[ x"
"[ y"
"\"
"\ """
"\ '"
"\ \"
"\ d"
"\ n"
"\ n”"
"\ r"
"]"
"]  "
"] """
"] )"
"] ."
"] ;"
"] {"
"^"
"^ ("
"^ \"
"_nx_utility_string_length_check"
"_nx_utility_string_length_check ("
"_nx_web_http_server_chunked_size_get"
"_nx_web_http_server_chunked_size_get ("
"_nx_web_http_server_content_get"
"_nx_web_http_server_content_get ("
"_nx_web_http_server_content_get_extended"
"_nx_web_http_server_content_get_extended ("
"_nx_web_http_server_content_length_get"
"_nx_web_http_server_content_length_get ("
"_nx_web_http_server_field_value_get"
"_nx_web_http_server_field_value_get ("
"_nx_web_http_server_memicmp"
"_nx_web_http_server_memicmp ("
"_nx_web_http_server_packet_get"
"_nx_web_http_server_packet_get ("
"_nx_web_http_server_param_get"
"_nx_web_http_server_param_get ("
"_nx_web_http_server_query_get"
"_nx_web_http_server_query_get ("
"_nx_web_http_server_receive"
"_nx_web_http_server_receive ("
"_nx_web_http_server_request_byte_expect"
"_nx_web_http_server_request_byte_expect ("
"_nx_web_http_server_request_chunked_get"
"_nx_web_http_server_request_chunked_get ("
"_nx_web_http_server_request_read"
"_nx_web_http_server_request_read ("
"_nx_web_http_server_type_get"
"_nx_web_http_server_type_get ("
"_nx_web_http_server_type_get_extended"
"_nx_web_http_server_type_get_extended ("
"_nxe_web_http_server_content_get"
"_nxe_web_http_server_content_get ("
"_nxe_web_http_server_content_length_get"
"_nxe_web_http_server_content_length_get ("
"_nxe_web_http_server_packet_get"
"_nxe_web_http_server_packet_get ("
"_nxe_web_http_server_param_get"
"_nxe_web_http_server_param_get ("
"_nxe_web_http_server_query_get"
"_nxe_web_http_server_query_get ("
"_nxe_web_http_server_type_get"
"_nxe_web_http_server_type_get ("
"`"
"` '"
"a"
"a  "
"a '"
"abc"
"abc ]"
"about"
"about  "
"account"
"account  "
"account ."
"accountNumber"
"accountNumber  "
"accountNumber )"
"accountNumber ,"
"actual"
"actual  "
"actual_size"
"actual_size  "
"actual_size )"
"after"
"after  "
"all"
"all  "
"allow"
"allow  "
"amount"
"amount )"
"an"
"an  "
"and"
"and  "
"another"
"another  "
"any"
"any  "
"any ("
"anything"
"anything ,"
"appropriate"
"appropriate  "
"are"
"are  "
"arg0"
"arg0  "
"argc"
"argc ,"
"args"
"args )"
"argtest"
"argtest  "
"argtest ."
"argv"
"argv ["
"as"
"as  "
"asParameter"
"asParameter ("
"asks"
"asks  "
"at"
"at  "
"attacker"
"attacker  "
"bar"
"bar  "
"bar )"
"be"
"be  "
"been"
"been  "
"between"
"between  "
"blah"
"body"
"body  "
"body >"
"bool"
"bool  "
"boolean"
"boolean  "
"br"
"br /"
"break"
"break ;"
"buffer"
"buffer  "
"buffer ."
"buffer_ptr"
"buffer_ptr  "
"buffer_ptr )"
"buffer_ptr +"
"buffer_ptr ;"
"byte"
"byte  "
"byte_offset"
"byte_offset ,"
"bytes"
"bytes  "
"c"
"c  "
"c '"
"c )"
"c ."
"caller"
"caller ."
"calling"
"calling  "
"can"
"can  "
"cat"
"cat  "
"catch"
"catch ("
"category"
"category ("
"ch"
"ch  "
"ch +"
"ch ,"
"ch ;"
"change"
"change  "
"char"
"char  "
"character"
"character  "
"character ."
"chunk"
"chunk  "
"chunk_extension"
"chunk_extension  "
"chunk_size"
"chunk_size  "
"chunk_size ,"
"chunked"
"chunked  "
"chunked ,"
"cin"
"cin  "
"class"
"class  "
"class ="
"classes"
"classes  "
"client"
"client ."
"cmd"
"cmd )"
"cmd ["
"code"
"code ."
"compile"
"compile  "
"compile ("
"compiled"
"compiled  "
"completion"
"completion  "
"consists"
"consists  "
"contain"
"contain  "
"contains"
"contains ("
"content"
"content  "
"content_length"
"content_length  "
"content_length )"
"continue"
"continue ;"
"convert"
"convert  "
"coursename"
"coursename  "
"coursename """
"coursename ;"
"cout"
"cout  "
"credits"
"credits  "
"credits """
"credits ."
"current"
"current  "
"current_data_pptr"
"current_data_pptr )"
"current_packet_pptr"
"current_packet_pptr )"
"current_packet_pptr ,"
"current_param"
"current_param  "
"current_param +"
"current_param ;"
"current_query"
"current_query  "
"current_query +"
"current_query ;"
"d"
"d {"
"data"
"data  "
"data ,"
"data ."
"dataflow"
"dataflow ."
"date"
"date  "
"date """
"date :"
"dd"
"dd -"
"def"
"def  "
"destination"
"destination  "
"destination ."
"destination_ptr"
"destination_ptr  "
"destination_ptr ,"
"destination_size"
"destination_size ,"
"different"
"different  "
"digits"
"digits  "
"div"
"div >"
"do"
"do  "
"doPost"
"doPost ("
"don"
"don '"
"e"
"e  "
"e '"
"e ."
"either"
"either  "
"else"
"else  "
"en"
"en """
"end"
"end  "
"endl"
"endl ;"
"enter"
"enter  "
"entered"
"entered  "
"equalsIgnoreCase"
"equalsIgnoreCase ("
"error"
"error ."
"escape_shell_cmd"
"escape_shell_cmd ("
"example"
"example  "
"execl"
"execl  "
"execl ("
"exit"
"exit ("
"expressions"
"expressions  "
"extends"
"extends  "
"extension"
"extension ."
"f"
"f '"
"failed"
"failed \"
"fakePassword"
"fakePassword """
"family"
"family :"
"field"
"field  "
"field_name"
"field_name ,"
"field_value"
"field_value ,"
"field_value ["
"field_value_size"
"field_value_size )"
"fields"
"fields ."
"final"
"final  "
"find"
"find  "
"finished"
"finished  "
"first"
"first ."
"font"
"font -"
"foo"
"foo  "
"for"
"for  "
"for ("
"for ="
"form"
"form  "
"form >"
"format"
"format ."
"forward"
"forward ."
"found"
"found  "
"found ."
"found ?"
"from"
"from  "
"function"
"function ."
"g"
"g '"
"gcc"
"gcc  "
"get"
"get  "
"getAnAnnotation"
"getAnAnnotation ("
"getMessage"
"getMessage ("
"getParameter"
"getParameter ("
"getSourceType"
"getSourceType ("
"getType"
"getType ("
"getValue"
"getValue ("
"grade"
"grade  "
"h"
"h '"
"h >"
"h1"
"h1 >"
"has"
"has  "
"hasLength"
"hasLength ("
"hasQualifiedName"
"hasQualifiedName ("
"have"
"have  "
"head"
"head >"
"header"
"header  "
"header ."
"here"
"here ,"
"home"
"home /"
"html"
"html  "
"html >"
"http_type_string"
"http_type_string  "
"http_type_string ,"
"i"
"i  "
"i )"
"i +"
"i ;"
"i ]"
"ideographs"
"ideographs  "
"if"
"if  "
"if ("
"import"
"import  "
"in"
"in  "
"include"
"include  "
"increased"
"increased  "
"ind"
"ind ("
"index"
"index  "
"index +"
"index -"
"index ;"
"index ]"
"indicating"
"indicating  "
"info"
"info ."
"information"
"information  "
"input"
"input  "
"input )"
"input ."
"instance"
"instance ."
"int"
"int  "
"integer"
"integer """
"into"
"into  "
"invalid"
"invalid  "
"is"
"is  "
"isNumeric"
"isNumeric ("
"isTaintedInput"
"isTaintedInput ("
"isValid"
"isValid ("
"its"
"its  "
"java"
"java ."
"javax"
"javax ."
"l"
"l '"
"l +"
"l ;"
"l ="
"label"
"label  "
"label >"
"lang"
"lang ="
"length"
"length  "
"length )"
"length ."
"length :"
"letters"
"letters  "
"line"
"line  "
"list"
"list ."
"loop"
"loop ."
"lowercase"
"lowercase ,"
"main"
"main  "
"main ("
"make"
"make  "
"margin"
"margin :"
"matched"
"matched \"
"matcher"
"matcher ("
"matches"
"matches ("
"max_param_size"
"max_param_size )"
"max_param_size ;"
"max_query_size"
"max_query_size )"
"max_query_size ;"
"message"
"message  "
"message )"
"message ="
"method"
"method ="
"must"
"must  "
"n"
"n """
"n '"
"name"
"name  "
"name ,"
"name ."
"name :"
"name ="
"name_length"
"name_length  "
"name_length )"
"name_length ,"
"need"
"need  "
"new"
"new  "
"new_packet_ptr"
"new_packet_ptr ,"
"new_packet_ptr ;"
"next"
"next  "
"no"
"no  "
"normally"
"normally  "
"not"
"not  "
"null"
"null  "
"null ;"
"number"
"number  "
"number """
"numeric"
"numeric  "
"nx_packet_append_ptr"
"nx_packet_append_ptr )"
"nx_packet_length"
"nx_packet_length ;"
"nx_packet_prepend_ptr"
"nx_packet_prepend_ptr ;"
"nx_packet_release"
"nx_packet_release ("
"nx_web_http_server_actual_bytes_received"
"nx_web_http_server_actual_bytes_received  "
"nx_web_http_server_actual_bytes_received ;"
"nx_web_http_server_chunked_request_remaining_size"
"nx_web_http_server_chunked_request_remaining_size  "
"nx_web_http_server_expect_receive_bytes"
"nx_web_http_server_expect_receive_bytes  "
"nx_web_http_server_expect_receive_bytes )"
"nx_web_http_server_id"
"nx_web_http_server_id  "
"nx_web_http_server_request_chunked"
"nx_web_http_server_request_chunked  "
"nx_web_http_server_request_chunked )"
"nx_web_http_server_request_packet"
"nx_web_http_server_request_packet  "
"nx_web_http_server_request_packet )"
"nx_web_http_server_request_packet ;"
"n”"
"n” )"
"n” ,"
"o"
"o  "
"o '"
"of"
"of  "
"only"
"only ,"
"only_letters"
"only_letters ("
"or"
"or  "
"other"
"other  "
"otherwise"
"otherwise ."
"out"
"out  "
"out ."
"overflow"
"overflow ?"
"override"
"override  "
"p"
"p >"
"packet"
"packet  "
"packet ,"
"packet ."
"packet_ptr"
"packet_ptr  "
"packet_ptr )"
"packet_ptr ,"
"page"
"page  "
"param"
"param  "
"param_number"
"param_number )"
"param_number ,"
"param_ptr"
"param_ptr  "
"param_ptr ,"
"param_ptr ["
"param_size"
"param_size  "
"param_size ,"
"parameter"
"parameter  "
"parameter """
"parameter ."
"parseInt"
"parseInt ("
"password"
"password  "
"password )"
"pattern"
"pattern ,"
"picked"
"picked  "
"pointer"
"pointer  "
"pointer ."
"pointers"
"pointers ."
"post"
"post """
"present"
"present ."
"print"
"print ("
"printf"
"printf ("
"private"
"private  "
"processing"
"processing  "
"properly"
"properly ."
"public"
"public  "
"query"
"query  "
"query ."
"query_number"
"query_number )"
"query_number ,"
"query_ptr"
"query_ptr  "
"query_ptr ,"
"query_ptr ["
"query_size"
"query_size  "
"query_size ,"
"r"
"r '"
"reach"
"reach  "
"receive"
"receive  "
"receive ,"
"regcomp"
"regcomp ("
"regex"
"regex  "
"regexec"
"regexec ("
"register"
"register  "
"remaining"
"remaining  "
"remove"
"remove  "
"replaceAll"
"replaceAll ("
"request"
"request  "
"request ,"
"request ."
"requested"
"requested ?"
"required"
"required """
"requirements"
"requirements  "
"res"
"res  "
"res )"
"response"
"response )"
"response ."
"result"
"result  "
"return"
"return  "
"return ("
"rritchey"
"rritchey $"
"run"
"run  "
"s"
"s )"
"s ."
"s :"
"s ;"
"s \"
"school"
"school ."
"score"
"score """
"search"
"search  "
"select"
"select  "
"select """
"select %"
"semicolon"
"semicolon ,"
"semmle"
"semmle ."
"sendError"
"sendError ("
"server"
"server  "
"server_ptr"
"server_ptr  "
"server_ptr ,"
"service"
"service  "
"servlet"
"servlet  "
"set"
"set  "
"signals"
"signals  "
"size"
"size  "
"size ."
"size :"
"size ;"
"skip"
"skip  "
"so"
"so  "
"some"
"some  "
"spaces"
"spaces ."
"specified"
"specified  "
"srmp"
"srmp  "
"srmp ."
"start"
"start  "
"startDate"
"startDate  "
"startDate """
"startDate ."
"static"
"static  "
"status"
"status  "
"status )"
"status ."
"status ;"
"stdio"
"stdio ."
"store"
"store  "
"string"
"string  "
"string_size"
"string_size  "
"string_size )"
"strlen"
"strlen ("
"style"
"style >"
"submit"
"submit """
"successful"
"successful  "
"sure"
"sure  "
"t"
"t  "
"t '"
"table"
"table """
"temp_name_length"
"temp_name_length ,"
"temp_name_length ;"
"terminal"
"terminal  "
"terminate"
"terminate  "
"test"
"test  "
"testScore"
"testScore  "
"testScore ;"
"text"
"text  "
"text """
"that"
"that  "
"the"
"the  "
"there"
"there  "
"this"
"this  "
"this ."
"through"
"through  "
"throw"
"throw  "
"title"
"title >"
"tmp"
"tmp  "
"tmp ,"
"tmp ;"
"to"
"to  "
"token"
"token  "
"token ."
"transfer"
"transfer ("
"try"
"try  "
"tryTransfer"
"tryTransfer ("
"type"
"type  "
"type ="
"unicodedata"
"unicodedata ."
"untrusted_bar"
"untrusted_bar )"
"untrusted_bar ;"
"up"
"up  "
"uppercase"
"uppercase ,"
"user"
"user  "
"userName"
"userName  "
"userName )"
"valid"
"valid ."
"validateInput"
"validateInput ("
"validated"
"validated  "
"validation"
"validation  "
"validation """
"value"
"value  "
"value )"
"value ."
"value ;"
"value ="
"var"
"var  "
"void"
"void  "
"wait_option"
"wait_option )"
"wait_option ,"
"want"
"want  "
"was"
"was  "
"we"
"we  "
"what"
"what  "
"when"
"when  "
"where"
"where  "
"which"
"which  "
"while"
"while  "
"while ("
"white"
"white  "
"x"
"x  "
"x +"
"x ,"
"x ;"
"x ="
"x ]"
"y"
"y ,"
"y -"
"y ="
"y >"
"y ]"
"you"
"you  "
"yyyy"
"yyyy """
"zero"
"zero ."
"zip"
"zip """
"zipCode"
"zipCode  "
"zipPattern"
"zipPattern  "
"zipPattern ."
"zipcode"
"zipcode  "
"{"
"{  "
"{ 0"
"{ margin"
"{ }"
"|"
"|  "
"| *"
"| REG_NOSUB"
"| |"
"}"
"}  "
"} """
"} $"
"} ("
"} )"
"~"
"~ <"
"“"
"“ %"
"“ ["
"“Edit”"
"“Edit” )"
"“File”"
"“File” )"
"“View”"
"“View” )"
"“aa"
"“aa  "
"“aa”"
"“aa”  "
"“ad"
"“ad  "
"“ad”"
"“ad”  "
"“argtest”"
"“argtest” ,"
"“blah”"
"“blah” ,"
